task.wait(5)
if game:GetService("StarterGui").WaitingForOpponent["Bottom Middle"].WaitingForOpponent.Visible == false then
    local args = {
        [1] = "SwordFight",
        [2] = 10,
        [3] = {
            ["assetType"] = "GamePass",
            ["assetId"] = "1069648461"
        },
        [4] = true
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RemoteCalls"):WaitForChild("GameSpecific"):WaitForChild("Tickets"):WaitForChild("CreateRoom"):InvokeServer(unpack(args))
end

game:GetService("ReplicatedStorage"):WaitForChild("RemoteCalls"):WaitForChild("GameSpecific"):WaitForChild("Sign"):WaitForChild("ChangeSignText"):InvokeServer("10 RBX SWORD FIGHT")
game:GetService("ReplicatedStorage"):WaitForChild("RemoteCalls"):WaitForChild("GameSpecific"):WaitForChild("Sign"):WaitForChild("HoldSign"):FireServer(true)

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")
local LocalPlayer = Players.LocalPlayer
local HttpService = cloneref(game:GetService("HttpService"))
local _TTSERVICE = cloneref(game:GetService('TextChatService'))
local _TCHANNEL = _TTSERVICE.TextChannels.RBXGeneral
local function sendChatMessage(C_1)
    if chatRunning then
        _TCHANNEL:SendAsync(C_1)
    end
end

-- UI Elements
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
local TimerLabel = Instance.new("TextLabel", ScreenGui)
local StopButton = Instance.new("TextButton", ScreenGui)
local RestartButton = Instance.new("TextButton", ScreenGui)
local ResumeButton = Instance.new("TextButton", ScreenGui)
local ChatToggleButton = Instance.new("TextButton", ScreenGui)

TimerLabel.Size = UDim2.new(0, 200, 0, 50)
TimerLabel.Position = UDim2.new(0.5, -100, 0.1, 0)
TimerLabel.BackgroundColor3 = Color3.new(0, 0, 0)
TimerLabel.TextColor3 = Color3.new(1, 1, 1)
TimerLabel.TextSize = 20
TimerLabel.Text = "Next server hop in: 120s"

StopButton.Size = UDim2.new(0, 100, 0, 50)
StopButton.Position = UDim2.new(0.5, -150, 0.2, 0)
StopButton.BackgroundColor3 = Color3.new(1, 0, 0)
StopButton.Text = "Stop Timer"

RestartButton.Size = UDim2.new(0, 100, 0, 50)
RestartButton.Position = UDim2.new(0.5, 50, 0.2, 0)
RestartButton.BackgroundColor3 = Color3.new(0, 1, 0)
RestartButton.Text = "Restart Timer"

ResumeButton.Size = UDim2.new(0, 100, 0, 50)
ResumeButton.Position = UDim2.new(0.5, -50, 0.2, 0)
ResumeButton.BackgroundColor3 = Color3.new(0, 0, 1)
ResumeButton.Text = "Resume Timer"

ChatToggleButton.Size = UDim2.new(0, 150, 0, 50)
ChatToggleButton.Position = UDim2.new(0.5, -75, 0.3, 0)
ChatToggleButton.BackgroundColor3 = Color3.new(1, 1, 0)
ChatToggleButton.Text = "Stop Chatting"

-- Variables
local countdown = 120
local timerRunning = false
local chatRunning = true

-- Fix: Stop infinite loops
local function serverHop()
    if not timerRunning then return end
    local servers = {}
    local req = request({ Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100", game.PlaceId) })
    local body = HttpService:JSONDecode(req.Body)
    if body and body.data then
        for _, v in pairs(body.data) do
            if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= game.JobId then
                table.insert(servers, v.id)
            end
        end
    end
    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], LocalPlayer)
    end
end

local function startTimer()
    if timerRunning then return end -- Prevent multiple timers
    timerRunning = true
    countdown = 120
    while countdown > 0 and timerRunning do
        TimerLabel.Text = "Next server hop in: " .. countdown .. "s"
        task.wait(1)
        countdown = countdown - 1
    end
    if timerRunning then
        queueonteleport('loadstring(game:HttpGet("https://raw.githubusercontent.com/ImNotW4CH0/DoubleDown/refs/heads/main/Alpha"))()')
        task.wait(0.5)
        serverHop()
    end
end

task.spawn(startTimer)

StopButton.MouseButton1Click:Connect(function()
    timerRunning = false
end)

RestartButton.MouseButton1Click:Connect(function()
    timerRunning = false
    task.wait(0.5) -- Ensure the old timer fully stops
    startTimer()
end)

ResumeButton.MouseButton1Click:Connect(function()
    if not timerRunning then
        startTimer()
    end
end)

ChatToggleButton.MouseButton1Click:Connect(function()
    chatRunning = not chatRunning
    ChatToggleButton.Text = chatRunning and "Stop Chatting" or "Keep Chatting"
end)

-- Fix: Chat loop stops properly
task.spawn(function()
    local messages = {
        "Yoo join my match only 10",
        "Join my sword fight you heard that right only 10 n get tha üí∞",
        "Step up and duel‚Äî10R on da line üéØ",
        "Think you can win? Prize: 10R! ‚öîÔ∏è",
        "Without fear of success! Rise thatüèÜand join my match!",
        "Prove your skills in my duel!"
    }
    while true do
        if chatRunning then
            sendChatMessage(messages[math.random(1, #messages)])
        end
        for _ = 1, math.random(7, 15) do
            if not chatRunning then break end
            task.wait(1)
        end
    end
end)
