if not game:IsLoaded() then
    game.Loaded:Wait()
end
if game.PlaceId == 9476339275 and game.Players.LocalPlayer.Name ~= "ernesto133488" then
   task.wait(3)
   setfpscap(6)
getgenv().a = true; getgenv().c = true
getgenv().d = true; getgenv().e = true
getgenv().f = true; getgenv().g = true
getgenv().h = true; getgenv().i = true
game.Players.LocalPlayer.DataSave.Common.FillOnStart.Gamepasses.SpinnerLuck.Value = true; game.Players.LocalPlayer.DataSave.Common.FillOnStart.Gamepasses.MVP.Value = true
local assets = {"1124286426", "1128031024", "1124208575"}
local TwentyRobux = {"StreamDriftNova", "Olivia_Jelly201174", "BlazeC00kie2014", "VenomSilverAlpha", "LuckyChas3Mast3r", "SparklyLegend45"}
local FortyRobux = {""}
local FiftyRobux = {"Jayd3nNova86"}
local OneHundredRobux = {""}

local messages1 = {
    "✅ You’re guaranteed a free win—no stress, no effort needed 🏆",
    "🎉 Free wins every time—no pressure, just hop in 💯",
    "🔥 No grind, no tryharding—just easy free wins 🚀",
    "🎁 Stress-free matches with free wins—join now 🕒",
    "🛠️ Don’t sweat it—free win is already yours 🥳",
    "📢 Get in, get your free win, and chill 📈",
    "💡 100% free win, zero effort—just fun 🌊",
    "🔓 Free win waiting—no pressure, just join 🗝️",
    "🎮 Free wins for all—zero stress, all fun 🔥",
    "🆓 Instant free win—no catch, no grind 🌐",
    "🪀 Jump in for fun—free win, no sweat 🤸",
    "🎈 Fun and wins go together—hop in now 🏆",
    "🎊 Free wins handed out—no skill check required 🧩",
    "🍭 Easy win zone—just join and smile 😄",
    "🕹️ All play, no stress—free win, no try needed 🎉",
    "🧸 Come chill and win—no hassle, no grind 🎯",
    "🪄 Win magic—zero tryhard energy needed ✨",
    "🎮 Just tap in, and the win is yours 🥇",
    "🎲 All fun, no pressure—win is automatic 🧃",
    "🚪 Open lobby = free win—walk right in 🔓",
    "🎁 Claim your free win—no tests, no sweat 📦",
    "🎵 Vibes only—wins are guaranteed 🎧",
    "🛋️ Sit back, relax, and let the win come to you 💤",
    "🏃‍♂️ No race—just a free win stroll 🛼",
    "🔋 No energy required—win is on the house 🧃",
    "🧘 Chill mode: ON — your win is ready 🧘‍♀️",
    "🍃 Win like a breeze—super light, super easy 🍂",
    "🏆 Play light, win big—no stress attached 🧠",
    "🎯 Direct shot to victory—no training arc 🎬",
    "🪁 Float in and win—no strings, just fun 🌈"
}

local messages3 = {
    "🏆 Guaranteed free win—just join and relax 🎉",
    "🎉 No stress, just free wins every match 🏖️",
    "🔥 It’s simple—join, play, and get a free win 🌴🎮",
    "💥 You win for free—no tryharding needed 🎁",
    "🎁 Just fun, no stress—your free win is ready 🧃",
    "🌟 Grab your free win—no grind, no hassle 🎉",
    "👐 Free win for everyone—easy and stress-free 🏆",
    "🏖️ You’re not trying hard, you’re just winning 🌊",
    "📚 Free win = no pressure—just chill and play 💫",
    "✨ Join in, get a free win—no stress at all 😎",
    "🍦 No effort needed—just scoop up your win 🍨",
    "🎮 No sweat lobbies—wins come free here 🏅",
    "🛝 Slide into victory—effortless fun 🚲",
    "🪁 Free win zone—just jump in, it’s yours 🌈",
    "🎯 Hit play and you hit win—zero grind 🔥",
    "🌴 Kick back, play, win—it’s that easy 🐚",
    "💤 Don’t tryhard—just win and nap 😴",
    "🎬 Scene: You winning—effort: none 🧃",
    "🧢 No cap, all win—no stress 😎",
    "📦 Free win delivery—join and receive 🚚",
    "🕶️ Stress-free zone—wins for chill players only 🧊",
    "📀 Play casually—win like a pro 🎮",
    "🚦Green light = Free win time 🟢",
    "🪄 Winning made easy—like magic 🪄",
    "🧃 Chill drink, chill win—just vibes 💧",
    "🚁 No mission, just win drop-off 🎁",
    "🛝 Easy slide to victory—no grind climb 🧗",
    "🌈 Just hop in—your win is waiting 🎠",
    "🎮 Push play, grab win—done. 📲",
    "🍉 Nothing hard, just juicy wins 🍓"
}

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local PlayerGui = Players.LocalPlayer:WaitForChild("PlayerGui")
local WaitingForOpponent = PlayerGui:WaitForChild("WaitingForOpponent")["Bottom Middle"].WaitingForOpponent.Background.Inside.DisplayName
local RemoteCalls = ReplicatedStorage:WaitForChild("RemoteCalls"):WaitForChild("GameSpecific"):WaitForChild("Tickets")

local lastDisplayName = WaitingForOpponent.Text
local GC = getconnections or get_signal_cons

loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()

for i,v in pairs(GC(Players.LocalPlayer.Idled)) do
    if v["Disable"] then
        v["Disable"](v)
    elseif v["Disconnect"] then
        v["Disconnect"](v)
    end
end

local VirtualUser = cloneref(game:GetService("VirtualUser"))
Players.LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

local function destroyAndCreateRoom()
    if table.find(TwentyRobux, game.Players.LocalPlayer.Name) then
        assets = {"1123182673", "1129492645", "1123746614"}
        roomSize = 20
    elseif table.find(FortyRobux, game.Players.LocalPlayer.Name) then
        --asset maintenance
        assets = {"1118198184", "1120872397", "1118724479", "1121246299", "1120462473"}
        roomSize = 40
    elseif table.find(FiftyRobux, game.Players.LocalPlayer.Name) then
        -- sends to Width Studios
        assets = {"1115183273", "1118688528", "1121058339", "1118732457", "1118832411"}
        roomSize = 50
    elseif table.find(OneHundredRobux, game.Players.LocalPlayer.Name) then
        -- asset maintenance
        assets = {"1122220352", "1118376169", "1123256260", "1123328254", "1123022264"}
        roomSize = 100
    else
        roomSize = 10
    end
    
    print("Attempting to destroy and create room...")
    RemoteCalls:WaitForChild("DestroyRoom"):InvokeServer()
    task.wait(0.5)
    game:GetService("ReplicatedStorage"):WaitForChild("RemoteCalls"):WaitForChild("GameSpecific"):WaitForChild("DailySpinner"):WaitForChild("ClaimDailySpinner"):InvokeServer()
    task.wait(0.5)
    local chosenAsset = assets[math.random(1, #assets)]
    local args = {"JumpRope", roomSize, { ["assetType"] = "GamePass", ["assetId"] = chosenAsset }, true}
    pcall(function() RemoteCalls:WaitForChild("CreateRoom"):InvokeServer(unpack(args)) end)
end

task.spawn(function()
    while getgenv().a do
        destroyAndCreateRoom()
        task.wait(10)
    end
end)

-------------


local function getRandomMessage()
    return messages1[math.random(1, #messages1)]
end

local function randomizeCase(text)
    local randomized = ""
    for i = 1, #text do
        local char = text:sub(i, i)
        if math.random() > 0.5 then
            char = char:upper()
        else
            char = char:lower()
        end
        randomized = randomized .. char
    end
    return randomized
end

local function loop2()
    if game:GetService("Players").LocalPlayer.PlayerGui.Signs["Middle Left"].SignInfo.Background.Background.Holding.Check.Visible == false then
        firesignal(game:GetService("Players").LocalPlayer.PlayerGui.Signs["Middle Left"].SignInfo.Background.Background.Holding.MouseButton1Click)
        game:GetService("ReplicatedStorage"):WaitForChild("RemoteCalls"):WaitForChild("GameSpecific"):WaitForChild("Sign"):WaitForChild("HoldSign"):FireServer(true)
    end

    local playerName = game.Players.LocalPlayer.Name
    local freeWinAmount = 10

    if table.find(TwentyRobux, playerName) then
        freeWinAmount = 20
    elseif table.find(FortyRobux, playerName) then
        freeWinAmount = 40
    elseif table.find(FiftyRobux, playerName) then
        freeWinAmount = 50
    elseif table.find(OneHundredRobux, playerName) then
        freeWinAmount = 100
    else
        freeWinAmount = 10
    end

    for i = 1, 6 do
        local randomMessage = getRandomMessage()
        print("Changing sign text to: " .. randomMessage)
        game:GetService("ReplicatedStorage"):WaitForChild("RemoteCalls"):WaitForChild("GameSpecific"):WaitForChild("Sign"):WaitForChild("ChangeSignText"):InvokeServer(randomMessage)
        task.wait(5)

        local randomizedFreeWin = randomizeCase("Free win " .. freeWinAmount)
        print("Changing sign text to: " .. randomizedFreeWin)
        game:GetService("ReplicatedStorage"):WaitForChild("RemoteCalls"):WaitForChild("GameSpecific"):WaitForChild("Sign"):WaitForChild("ChangeSignText"):InvokeServer(randomizedFreeWin)
        task.wait(5)
    end
end

task.spawn(function()
    while getgenv().c do
        loop2()
        task.wait(5)
    end
end)

-----

local function loop3()
    if not game.Players.LocalPlayer.Character:FindFirstChild("Sign") then
        firesignal(game:GetService("Players").LocalPlayer.PlayerGui.Signs["Middle Left"].SignInfo.Background.Background.Holding.MouseButton1Click)
    end
end

task.spawn(function()
    while getgenv().d do
        loop3()
        task.wait(10)
    end
end)

---------

local lastMessageTime = 0  
local cooldown = 5  

local _TTSERVICE = cloneref(game:GetService('TextChatService'))
local _TCHANNEL = _TTSERVICE.TextChannels.RBXGeneral

local function chat(C_1)
    _TCHANNEL:SendAsync(C_1)
end

local messages2 = {
    "{opponent}, free win for you! Do itttt!",
    "Bro {opponent}, just take the win! Do itttt!",
    "It’s your free W, {opponent}! Do itttt!",
    "You win, I lose! Do itttt!",
    "EZ win for you, {opponent}! Do itttt!",
    "Don’t even try, just win! Do itttt!",
    "I won’t even fight back! Do itttt!",
    "You got this, {opponent}! Do itttt!",
    "I’ll throw, just take it! Do itttt!",
    "No effort needed, {opponent}! Do itttt!"
}

local currentOpponent = nil  
local messageCount = 0  
local selectedMessages = {}  

local function loop4()
    local waitingGui = game:GetService("Players").LocalPlayer.PlayerGui.WaitingForOpponent["Bottom Middle"].WaitingForOpponent

    if waitingGui.Visible == true then
        local displayText = waitingGui.Background.Inside.DisplayName.Text
        local playerDisplayName = game.Players.LocalPlayer.DisplayName

        if displayText ~= playerDisplayName.." VS ????" then
            local opponentName = displayText:match("VS (.+)")
            if opponentName then
                if opponentName ~= currentOpponent then  
                    currentOpponent = opponentName  
                    messageCount = 0  

                    -- Pick 3 random unique messages
                    selectedMessages = {}
                    while #selectedMessages < 3 do
                        local msg = messages2[math.random(1, #messages2)]
                        if not table.find(selectedMessages, msg) then
                            table.insert(selectedMessages, msg)
                        end
                    end
                end

                if messageCount < 3 then
                    local currentTime = tick()
                    if currentTime - lastMessageTime >= cooldown then
                        lastMessageTime = currentTime  
                        messageCount = messageCount + 1  
                        local message = selectedMessages[messageCount]:gsub("{opponent}", opponentName)
                        task.wait(1)
                        chat(message)
                    end
                end
            end
        end
    end
end

task.spawn(function()
    while getgenv().e do
        loop4()
        task.wait(1)
    end
end)

--

local function loop5()
    local randomMessage = messages3[math.random(1, #messages3)]
    chat(randomMessage)
end

task.spawn(function()
    while getgenv().f do
        loop5()
        task.wait(20)
    end
end)

--

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

local function updateCharacterReferences(newCharacter)
    character = newCharacter
    humanoid = character:WaitForChild("Humanoid")
    hrp = character:WaitForChild("HumanoidRootPart")
    setupSeatedConnection()
end

local seatedConnection
function setupSeatedConnection()
    if seatedConnection then
        seatedConnection:Disconnect()
    end
    seatedConnection = humanoid.Seated:Connect(function(active, seat)
        if active then
            humanoid:ChangeState(Enum.HumanoidStateType.Physics)
            humanoid.Jump = true
        else
            humanoid:ChangeState(Enum.HumanoidStateType.Running)
        end
    end)
end

setupSeatedConnection()

player.CharacterAdded:Connect(function(newCharacter)
    updateCharacterReferences(newCharacter)
end)

local function getRandomPlayer()
    local eligiblePlayers = {}
    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            local otherHRP = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
            if otherHRP then
                local distance = (hrp.Position - otherHRP.Position).Magnitude
                if distance <= 2000 then
                    table.insert(eligiblePlayers, otherPlayer)
                end
            end
        end
    end
    if #eligiblePlayers > 0 then
        return eligiblePlayers[math.random(1, #eligiblePlayers)]
    end
    return nil
end

local function moveToPlayer(targetPlayer)
    if targetPlayer and targetPlayer.Character then
        local targetHRP = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
        if targetHRP then
            humanoid:MoveTo(targetHRP.Position)
        end
    end
end

local function loop6()
    while getgenv().g do
        if character and humanoid and hrp then
            local randomPlayer = getRandomPlayer()
            if randomPlayer then
                moveToPlayer(randomPlayer)
            end
        end
        task.wait(5)
    end
end

task.spawn(loop6)

---

local function loop7()
    local player = game.Players.LocalPlayer

    while getgenv().h do
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")

        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end

        task.wait(math.random(5, 10))
    end
end

task.spawn(loop7)


--

local player = Players.LocalPlayer
local safePosition = Vector3.new(0, 10, 0)
local fallThreshold = -10

local function loop8()
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if hrp and hrp.Position.Y < fallThreshold then
        hrp.CFrame = CFrame.new(safePosition)
    end
end

task.spawn(function()
    while getgenv().i do
        task.wait(0.5)
        loop8()
    end
end)

player.CharacterAdded:Connect(function()
    task.spawn(function()
        while getgenv().i do
            task.wait(0.5)
            loop8()
        end
    end)
end)

if player.Character then
    loop8()
end

local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer
local Webhook_URL = "https://discord.com/api/webhooks/1363754270545150033/RFndhGTN6GhIiQtmOagae2WL_4VX1Bc42XQqHTY302SC-w88kbCj5zWXm1YD-YzNGJQj"
local avatarUrl = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. LocalPlayer.UserId .. "&width=420&height=420&format=png"

local paidAmount = 10

if table.find(TwentyRobux, LocalPlayer.Name) then
    paidAmount = 20
elseif table.find(FortyRobux, LocalPlayer.Name) then
    paidAmount = 40
elseif table.find(FiftyRobux, LocalPlayer.Name) then
    paidAmount = 50
elseif table.find(OneHundredRobux, LocalPlayer.Name) then
    paidAmount = 100
end

game.Players.LocalPlayer.PlayerGui.JumpRope.ChildAdded:Connect(function(child)
    if child.Name == "Middle Middle Template" then
        pcall(function()
            local waitingGui = LocalPlayer.PlayerGui:FindFirstChild("WaitingForOpponent") and LocalPlayer.PlayerGui.WaitingForOpponent:FindFirstChild("Bottom Middle")
            if not waitingGui then return end

            local waitingBox = waitingGui:FindFirstChild("WaitingForOpponent")
            if not waitingBox or not waitingBox.Visible then return end

            local displayText = waitingBox.Background.Inside.DisplayName.Text
            local playerDisplayName = LocalPlayer.DisplayName

            print("[DEBUG] Display text:", displayText)

            if displayText ~= playerDisplayName.." VS ????" then
                local opponentName = displayText:match("VS (.+)")
                print("[DEBUG] Parsed opponent name:", opponentName)

                if opponentName then
                    local opponentName2 = opponentName
                    for _, player in ipairs(Players:GetPlayers()) do
                        if player.DisplayName == opponentName then
                            opponentName2 = player.Name
                            print("[DEBUG] Resolved display name to username:", opponentName2)
                            break
                        end
                    end

                    if opponentName2 == opponentName then
                        warn("[DEBUG] Could not resolve username from display name.")
                    end

                    local t = os.date("*t")
                    local hour = t.hour % 12
                    hour = hour == 0 and 12 or hour
                    local suffix = t.hour < 12 and "AM" or "PM"
                    local timeString = string.format("%d:%02d %s", hour, t.min, suffix):upper()

                    local response = request({
                        Url = Webhook_URL,
                        Method = "POST",
                        Headers = {
                            ["Content-Type"] = "application/json"
                        },
                        Body = HttpService:JSONEncode({
                            ["username"] = "BOT_" .. string.upper(LocalPlayer.Name),
                            ["avatar_url"] = avatarUrl,
                            ["content"] = "",
                            ["embeds"] = { {
                                ["title"] = "**MARKET SALE**",
                                ["description"] = "Our content monitors on our bots have detected a product sale.",
                                ["type"] = "rich",
                                ["color"] = tonumber(0xffffff),
                                ["fields"] = {
                                    {
                                        ["name"] = "Seller's Hardware ID:",
                                        ["value"] = game:GetService("RbxAnalyticsService"):GetClientId(),
                                        ["inline"] = false
                                    },
                                    {
                                        ["name"] = "Buyer's Username & Paid Amount:",
                                        ["value"] = opponentName2 .. " & R$ " .. (paidAmount - paidAmount * 0.4),
                                        ["inline"] = true
                                    },
                                    {
                                        ["name"] = "Time of Sale:",
                                        ["value"] = timeString,
                                        ["inline"] = true
                                    }
                                }
                            }}
                        })
                    })

                    print("[DEBUG] Webhook response:", response and response.StatusCode or "No response")
                end
            end
        end)
    end
end)

local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer

local Webhook_URL2 = "https://discord.com/api/webhooks/1363896607203918117/u0Hwt7IebpnCZfvLvwFw_qEfawjS4yohiVDTdtlg3rFrYjsMM2BOfnybTu-UOHbfP8da"

local function logToWebhook(message)
    pcall(function()
        request({
            Url = Webhook_URL2,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode({
                content = "<@1005618339755855923>\n```[ERROR - " .. LocalPlayer.Name .. "]\n" .. message .. "\n```"
            })
        })
    end)
end

RunService.RenderStepped:Connect(function()
    if not workspace:FindFirstChild("ArenasREAL") then return end

    local success, err = pcall(function()
        for _, v in pairs(workspace.ArenasREAL:GetChildren()) do
            local arenaTemplate = v:FindFirstChild("ArenaTemplate")
            if arenaTemplate then
                local red = arenaTemplate:FindFirstChild("Red")
                if red then
                    local playerText = red:FindFirstChild("PlayerText")
                    if playerText and playerText:FindFirstChild("SurfaceGui") and playerText.SurfaceGui:FindFirstChild("TextLabel") then
                        local phrase = playerText.SurfaceGui.TextLabel:FindFirstChild("_entirePhrase")
                        if phrase and phrase[1] and phrase[1]:FindFirstChild("_untranslatableText") then
                            if phrase[1]["_untranslatableText"].Value == LocalPlayer.DisplayName then
                                local playingArenaTemplate = v:FindFirstChild("PlayingArenaTemplate")
                                if playingArenaTemplate then
                                    for _, child in pairs(playingArenaTemplate:GetChildren()) do
                                        for _, subChild in pairs(child:GetChildren()) do
                                            subChild:Destroy()
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end)

    if not success then
        print("[ERROR] Arena loop failed:", err)
        logToWebhook(err)
    end
end)
end

local HttpService = cloneref(game:GetService("HttpService"))
local TextChatService = cloneref(game:GetService("TextChatService"))
local LocalPlayer = Players.LocalPlayer

local webhookUrl = "https://discord.com/api/webhooks/1365153134409814066/CwEe0lwPCenpUQuPHYuFLBgCISMyyv7i9eQMzr3g1WnPBFX1q3wQs-w8dHILzjGqPeoE"
local generalChannel = TextChatService.TextChannels:FindFirstChild("RBXGeneral")

local _TTSERVICE = cloneref(game:GetService('TextChatService'))
local _TCHANNEL = _TTSERVICE.TextChannels.RBXGeneral

local function sendChat(C_1)
    _TCHANNEL:SendAsync(C_1)
end

local messages4 = {
    "I’m not a bot, I’m a real player 💪",
    "Not a bot, just a legit player here 🎮",
    "I’m 100% human, not a bot 😎",
    "I’m not a bot, stop accusing me 🔴",
    "Definitely not a bot, just playing the game 🔥",
    "I’m real, not a bot—don’t get it twisted 🤷",
    "No bots here, just a human gamer 🧑‍💻",
    "I’m not a bot, I’ve got hands 🤲",
    "I’m real, not automated—just skilled 🏆",
    "Not a bot, just good at the game 🎯",
    "I’m not a bot, just focused 🔥",
    "Stop calling me a bot—I’m a player, not a script 🧠",
    "I’m not a bot, I’m a legit human player 👀",
    "Bots don’t type like me, trust me 🧑‍💼",
    "Not a bot, just having fun and playing fair 🏅",
    "I’m a real player, no bot involved 👨‍💻",
    "No scripts, no bots—just me, playing legit 🛑",
    "Bots don’t have this kind of skill 💥",
    "I’m not a bot, just a pro at the game 🎮",
    "Definitely not a bot, just fast reflexes ⚡",
    "I’m not a bot, I’m just here to play and win 🏁",
    "I’m not cheating, I’m just a skilled player 💥",
    "Bots don’t chat, I’m here talking with you 🗨️",
    "I’m not a bot, just good at the game 🏅",
    "No bots here, just pure skill 💯",
    "I’m not a bot, just fast reactions 👌",
    "I’m not a bot, I’ve got real human skill 🧠",
    "Real player here, no bots involved 💪",
    "I’m human, no bots here 🧑‍💻",
    "Not a bot, I’m just playing to win 🏆",
    "I’m not a bot, I’m just efficient and skilled 🏅",
    "Call me skilled, not scripted 🎮",
    "I’m not a bot, I’m just in the zone 🧘",
    "Bots can’t think like me, I’m a player 🧠",
    "I’m a human player, no automation here 🧑‍💻",
    "I’m not a bot, I’m a player just like you 🕹️",
    "No bots, just fast moves from a real player 💨",
    "Trust me, bots can’t vibe like this 😎",
    "If I were a bot, would I type this? 🤔",
    "Real fingers, real gameplay 🤜🤛",
    "I’m built different—not built with code 🧱",
    "Just fast, not fake ⚡",
    "I’m not a bot, I just know what I’m doing 🧠",
    "Not scripted—just smooth with it 🎮",
    "Bots glitch, I dominate 💪",
    "I’m not a bot, just warmed up 🔥",
    "Too good to be a bot—just facts 📈",
    "I type, I play, I win—humans only ✍️",
    "I’m not a macro, I’m a main character 🕹️",
    "Bots don’t laugh, I do 😂",
    "You’re looking at raw skill, not code 🤯",
    "Bots freeze—I'm ice cold 🧊",
    "This is talent, not automation 💡",
    "Real person behind the screen, I promise 🤝",
    "Nah, not a bot—just cracked at the game 💥",
    "Bots don’t get accused this much lol 😅",
    "I’m human, just sharp with my plays 🎯",
    "Bots don’t dance like I do 🕺",
    "Skill issue? Maybe. Bot? Never. 🚫",
    "You’re watching skill in real-time 🛠️",
    "Just cause I’m fast doesn’t mean I’m fake 🏃",
    "I’m not a bot, I just train harder 🧠",
    "You can’t script this kind of timing ⏱️",
    "Manual moves, real reactions 🕹️",
    "I’m live, not coded ⚙️",
    "Bots follow patterns—I make plays 🔄",
    "Straight-up human reflexes, nothing else 🔥"
}

if generalChannel then
    generalChannel.MessageReceived:Connect(function(msg)
        local lowerMsg = string.lower(msg.Text)
        if string.find(lowerMsg, "bot") and msg.TextSource.UserId ~= game.Players.LocalPlayer.UserId then
    	    local index = math.random(1, #messages4)
    	    local message = messages4[index]
	    local timeTook = math.random(5.5, 11)
            task.wait(timeTook)
            sendChat(message)

            local userId = msg.TextSource and msg.TextSource.UserId
            local sender = Players:GetPlayerByUserId(userId or 0)
            local senderName = sender and sender.Name or (msg.PrefixText or "Unknown")

            local t = os.date("*t")
            t.hour = t.hour - 7
            if t.hour < 0 then
                t.hour = t.hour + 24
                t.day = t.day - 1
            end

            local hour = t.hour % 12
            hour = hour == 0 and 12 or hour
            local suffix = t.hour < 12 and "AM" or "PM"
            local timeString = string.format("%d:%02d %s", hour, t.min, suffix):upper()

            local payload = {
                username = "LENGTH_BOT_REPORTER",
                embeds = {{
                    title = "BOT MENTION DETECTED",
                    description = "Our content monitors have detected the blacklisted word bot in chat.",
                    color = 0xFF0000,
                    fields = {
                        {name = "BOT Username", value = "BOT_"..LocalPlayer.Name, inline = true},
                        {name = "Sender Username", value = senderName, inline = true},
                        {name = "Message", value = msg.Text, inline = false},
                        {name = "Response", value = message, inline = false},
			{name = "Response Time", value = timeTook, inline = false},
                        {name = "Job ID", value = game.JobId, inline = false},
                        {name = "Time", value = timeString, inline = false}
                    }
                }}
            }

            local response = request({
                Url = webhookUrl,
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = HttpService:JSONEncode(payload)
            })

            print("[DEBUG] Webhook response:", response and response.StatusCode or "No response")
        end
    end)
else
    warn("RBXGeneral channel not found.")
end
